{"version":3,"sources":["components/Button1/Button1.jsx","components/pages/Home/Home.js","components/Navbar/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","Button1","props","onClick","console","log","children","Home","Navbar","role","class","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAMMA,EAASC,IAAOC,OAAV,gdAgCGC,EAVQ,SAACC,GACpB,OACI,cAACJ,EAAD,CAAQK,QAAS,WACbC,QAAQC,IAAI,iBADhB,SAGKH,EAAMI,YC9BJ,SAASC,IACtB,OACE,8BACE,cAAC,EAAD,gCCHS,SAASC,IACpB,OACI,qBAAKC,KAAK,aAAaC,MAAM,sBAA7B,SACI,oBAAID,KAAK,OAAOC,MAAM,oBAAtB,SACI,oBAAIA,MAAM,mBAAV,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,wB,MCSLC,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAACJ,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,IAAIC,UAAWR,UCC1BS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.28f3501f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button1.css';\r\nimport styled from 'styled-components';\r\n\r\n// Have the thing to invert colors based on primary or secondary class button\r\n// Can only do hover with inline styles, so it is in .css\r\nconst Button = styled.button`\r\n    display: inline-block;\r\n    background: rgba(126, 168, 24);\r\n    color: #fff;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    margin: 5px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    font-size: 15px;\r\n    font-family: inherit;\r\n    box-shadow: 0 3px 17px 0 rgb(112 81 239 / 27%);\r\n    -webkit-transition: box-shadow 350ms,-webkit-transform 350ms;\r\n    &focus: {\r\n        outline: none;\r\n    };\r\n`\r\n\r\n// Find more elegant solution for swapping between two sets of styling. i.e: dark and light mode, background and color need to swap\r\n\r\n\r\nexport const Button1 = (props) => {\r\n    return (\r\n        <Button onClick={() => {\r\n            console.log(\"Boom whaddup\");\r\n        }}>\r\n            {props.children}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default Button1","import React from \"react\";\r\nimport Button1 from \"../../Button1/Button1\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <Button1>Testing testing</Button1>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(){\r\n    return (\r\n        <nav role='navigation' class='nav-menu w-nav-menu'>\r\n            <ul role='list' class='header-navigation'>\r\n                <li class='nav-item-wrapper'>\r\n                    <Link to='/'>Home</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/pages/Home/Home\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}