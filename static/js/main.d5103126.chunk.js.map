{"version":3,"sources":["components/Button1/Button1.jsx","components/pages/Home/Home.js","components/pages/About/About.jsx","components/pages/Portfolio/Portfolio.jsx","documents/Joseph S Camyre Resume.pdf","components/NavButton/NavButton.jsx","components/NavButtons/NavButtons.jsx","components/Navbar/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","Button1","props","className","class","onClick","console","log","children","imgStyles","width","height","borderRadius","float","margin","Home","to","style","backgroundColor","alt","src","color","href","target","rel","maxWidth","About","Portfolio","NavButton","useState","current","NavButtons","display","Resume","Navbar","role","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mXAMMA,EAASC,IAAOC,OAAV,gdAgCGC,EAVQ,SAACC,GACpB,OACI,cAACJ,EAAD,CAAQK,UAAWD,EAAME,MAAOC,QAAS,WACrCC,QAAQC,IAAI,iBADhB,SAGKL,EAAMM,YC5BbC,G,MAAY,CAChBC,MAAO,QACPC,OAAQ,MACRC,aAAc,OACdC,MAAO,QACPC,OAAQ,eAOK,SAASC,IACtB,OACE,gCACE,8BACE,cAAC,EAAD,UACE,cAAC,IAAD,CAAMC,GAAG,aAAT,kCAGJ,8BACE,sBAAKC,MAAO,CAAEC,gBAAiB,WAA/B,UACE,qBACED,MAAOR,EACPU,IAAI,UACJC,IAAI,wIAEN,qBAAIH,MAAO,CAAEH,OAAQ,aAArB,4CACoC,GAClC,sBAAMG,MAAO,CAAEI,MAAO,sBAAtB,uCAMN,iFACA,iFACA,mEACA,6EACA,iCACE,8BACE,gCACE,mBACEC,KAAK,wCACLC,OAAO,SACPC,IAAI,aAHN,SAKE,qBACEL,IAAI,iBACJF,MAAO,CAAEL,aAAc,MAAOa,SAAU,QACxCL,IAAI,mIAGR,mBACEE,KAAK,6CACLC,OAAO,SACPC,IAAI,aACJrB,UAAU,8BAJZ,SAME,qBACEgB,IAAI,gBACJC,IAAI,6ICxDLM,MARf,WACI,OACI,yBCMOC,MARf,WACI,OACI,yB,gBCJO,MAA0B,mDCwB1BC,G,MAnBG,SAAC1B,GAAW,IAAD,EACK2B,oBAAS,GADd,6BAWzB,OACI,wBACA1B,UAAWD,EAAM4B,QAAU,mBAAqB,WADhD,SAEK5B,EAAMM,aCyCJuB,G,MAtDI,WAAO,IAAD,EACSF,mBAAS,QADlB,6BAyBrB,OACI,qBAAI1B,UAAU,oBAAd,UACI,oBAAIA,UAAU,mBAAmBc,MAAO,CAACe,QAAS,gBAAlD,SAEI,cAAC,EAAD,UACI,cAAC,IAAD,CAAMhB,GAAG,IAAT,sBAGR,oBAAIb,UAAU,mBAAd,SACI,cAAC,EAAD,UACI,cAAC,IAAD,CAAMa,GAAG,SAAT,uBAGR,oBAAIb,UAAU,mBAAd,SACI,cAAC,EAAD,UACI,cAAC,IAAD,CAAMa,GAAG,aAAT,2BAGR,oBAAIb,UAAU,mBAAd,SAEI,cAAC,EAAD,UACI,mBAAGmB,KAAMW,EAAQV,OAAO,SAASC,IAAI,aAArC,6BC/CL,SAASU,IACpB,OACI,sBAAK/B,UAAU,mBAAf,UAGI,cAAC,EAAD,UACI,mBAAGC,MAAM,qBAEb,qBAAKD,UAAU,sBAAf,SACI,qBAAKgC,KAAK,aAAa/B,MAAM,sBAA7B,SACI,cAAC,EAAD,W,MCQLgC,MAbf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,IACjC,cAAC,IAAD,CAAOuB,KAAK,SAASC,UAAWb,IAChC,cAAC,IAAD,CAAOY,KAAK,aAAaC,UAAWZ,WCL7Ba,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d5103126.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button1.css';\r\nimport styled from 'styled-components';\r\n\r\n// Have the thing to invert colors based on primary or secondary class button\r\n// Can only do hover with inline styles, so it is in .css\r\nconst Button = styled.button`\r\n    display: inline-block;\r\n    background: rgba(126, 168, 24);\r\n    color: #fff;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    margin: 5px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    font-size: 15px;\r\n    font-family: inherit;\r\n    box-shadow: 0 3px 17px 0 rgb(112 81 239 / 27%);\r\n    -webkit-transition: box-shadow 350ms,-webkit-transform 350ms;\r\n    &focus: {\r\n        outline: none;\r\n    };\r\n`\r\n\r\n// Find more elegant solution for swapping between two sets of styling. i.e: dark and light mode, background and color need to swap\r\n\r\n\r\nexport const Button1 = (props) => {\r\n    return (\r\n        <Button className={props.class} onClick={() => {\r\n            console.log(\"Boom whaddup\");\r\n        }}>\r\n            {props.children}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default Button1","import React from \"react\";\r\nimport Button1 from \"../../Button1/Button1\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nconst imgStyles = {\r\n  width: \"800px\",\r\n  height: \"50%\",\r\n  borderRadius: \"20px\",\r\n  float: \"right\",\r\n  margin: \"20px 120px\",\r\n};\r\n\r\n// Refactor code and split up into more components\r\n\r\n// Other portfolio site has ::before and ::after surrounding each div, I think that's how he gets it to load as you scroll\r\n// Contact page\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button1>\r\n          <Link to=\"/portfolio\">See my portfolio</Link>\r\n        </Button1>\r\n      </div>\r\n      <div>\r\n        <div style={{ backgroundColor: \"#eeeeee\" }}>\r\n          <img\r\n            style={imgStyles}\r\n            alt=\"R32 GTR\"\r\n            src=\"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fgetwallpapers.com%2Fwallpaper%2Ffull%2F2%2Ff%2Fd%2F483719.jpg&f=1&nofb=1\"\r\n          />\r\n          <h1 style={{ margin: \"20px 60px\" }}>\r\n            Hello, I'm&nbsp;Joseph Camyre, a {\"\"}\r\n            <span style={{ color: \"rgba(126, 168, 24)\" }}>\r\n              Software Engineer\r\n            </span>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <div>Feel like I should put the About me stuff here</div>\r\n      <div>Put my skills/expertise, idk if this good here</div>\r\n      <div>Couple thumbnails from portfolio</div>\r\n      <div>Keep it simple with the social media links</div>\r\n      <footer>\r\n        <div>\r\n          <div>\r\n            <a\r\n              href=\"https://www.instagram.com/realmizkif/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <img\r\n                alt=\"Instagram logo\"\r\n                style={{ borderRadius: \"5px\", maxWidth: \"40px\" }}\r\n                src=\"https://uploads-ssl.webflow.com/5fdcc89b08dd76ebd582ce20/5fdcc89b1788e769745cfdc8_icon-social-media-03-designer-template.svg\"\r\n              />\r\n            </a>\r\n            <a\r\n              href=\"https://www.linkedin.com/in/joseph-camyre/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"social-media-icon instagram\"\r\n            >\r\n              <img\r\n                alt=\"Linkedin logo\"\r\n                src=\"https://uploads-ssl.webflow.com/5fdcc89b08dd76ebd582ce20/5fdcc89b1788e7240e5cfdb7_icon-social-media-04-designer-template.svg\"\r\n              />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nfunction Portfolio() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Portfolio\r\n","export default __webpack_public_path__ + \"static/media/Joseph S Camyre Resume.398033cf.pdf\";","import React, { useState } from 'react'\r\nimport './NavButton.css';\r\n\r\n// If the button is clicked, change className to nav-link.current\r\n\r\nconst NavButton = (props) => {\r\n    const [current, setCurrent] = useState(false);\r\n\r\n    const toggleCurrent = () => {\r\n        if (!current) {\r\n            setCurrent(true);\r\n        } else {\r\n            setCurrent(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button\r\n        className={props.current ? 'nav-link current' : 'nav-link'}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default NavButton\r\n","import React, { useState } from 'react'\r\nimport Resume from '../../documents/Joseph S Camyre Resume.pdf';\r\nimport NavButton from '../NavButton/NavButton';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavButtons.css'\r\n\r\nconst NavButtons = () => {\r\n    const [current, setCurrent] = useState('home');\r\n\r\n    const toggleCurrent = () => {\r\n        if (!current) {\r\n            setCurrent(true);\r\n        } else {\r\n            setCurrent(false);\r\n        }\r\n\r\n        switch(current) {\r\n            case 'home':\r\n                break;\r\n            case 'about':\r\n                break;\r\n            case 'portfolio':\r\n                break;\r\n            case 'resume':\r\n                break;\r\n        }\r\n    }\r\n\r\n    // With the switch current, when switching to a different route, change current. Before changing current, check which is current, and switch it to false.\r\n    // Can load different divs by having a listener for windows.y, have like 4/5 div pages and switch cases\r\n\r\n    return (\r\n        <ul className='header-navigation'>\r\n            <li className='nav-item-wrapper' style={{display: 'inline-block'}}>\r\n            {/* I think I have to make a new button component because Button class overrides nav-link */}\r\n                <NavButton>\r\n                    <Link to='/'>Home</Link>\r\n                </NavButton>\r\n            </li>\r\n            <li className='nav-item-wrapper'>\r\n                <NavButton>\r\n                    <Link to='/about'>About</Link>\r\n                </NavButton>\r\n            </li>\r\n            <li className='nav-item-wrapper'>\r\n                <NavButton>\r\n                    <Link to='/portfolio'>Portfolio</Link>\r\n                </NavButton>\r\n            </li>\r\n            <li className='nav-item-wrapper'>\r\n                {/* Should resume open in the same tab or open new one? */}\r\n                <NavButton>\r\n                    <a href={Resume} target='_blank' rel='noreferrer'>Resume</a>\r\n                </NavButton>\r\n            </li>\r\n        </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default NavButtons\r\n","import React from 'react';\r\nimport Button from '../Button1/Button1';\r\nimport './Navbar.css';\r\nimport NavButtons from '../NavButtons/NavButtons';\r\n    \r\nexport default function Navbar(){\r\n    return (\r\n        <div className='navbar-container'>\r\n            {/* <i class=\"fas fa-feather-alt\"></i> */}\r\n            {/* <i class=\"fas fa-signature\"></i> */}\r\n            <Button>\r\n                <i class=\"fas fa-icicles\" />\r\n            </Button>\r\n            <div className='header-menu-wrapper'>\r\n                <nav role='navigation' class='nav-menu w-nav-menu'>\r\n                    <NavButtons />\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/pages/Home/Home\";\nimport About from \"./components/pages/About/About\";\nimport Portfolio from \"./components/pages/Portfolio/Portfolio\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport \"./App.css\";\n\n// I want to have a global theme where I can easily swap color themes. There would be the color, background color, then I can invert colors for the different buttons\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/portfolio\" component={Portfolio} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}